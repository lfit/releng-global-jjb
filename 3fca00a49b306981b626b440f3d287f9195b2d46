{
  "comments": [
    {
      "key": {
        "uuid": "c3cc4aa0_7b76fd96",
        "filename": "shell/openstack-cleanup-orphaned-stacks.sh",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 8
      },
      "writtenOn": "2019-05-26T02:59:14Z",
      "side": 1,
      "message": "This statement is incorrect. The code below means ignore ALL errors coming from lftools, not just DELETE_FAILED. This would mask other issues that may arise from delete failure.\n\nIf the intent really is to only ignore for DELETE_FAILED then lftools should be improved to print a warning on only DELETE_FAILED states and continue to report failure for the other states.",
      "range": {
        "startLine": 90,
        "startChar": 8,
        "endLine": 90,
        "endChar": 60
      },
      "revId": "3fca00a49b306981b626b440f3d287f9195b2d46",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5446b4e3_b250b860",
        "filename": "shell/openstack-cleanup-orphaned-stacks.sh",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 182
      },
      "writtenOn": "2019-05-28T02:11:03Z",
      "side": 1,
      "message": "Are you getting a DELETE_FAILED because something did not exist, or is it failing to delete something that existed. The second situation is an ERROR and should not be ignored. If it cannot delete something we either have permission problem or we are getting IO errors. The end result of a delete of a file that does not exist is the same and a successful delete, no harm no foul.\n\nYou want it to work like \u0027rm -f\u0027\n\nUnfortunately the fix here may be in lftools not in this script...",
      "parentUuid": "c3cc4aa0_7b76fd96",
      "range": {
        "startLine": 90,
        "startChar": 8,
        "endLine": 90,
        "endChar": 60
      },
      "revId": "3fca00a49b306981b626b440f3d287f9195b2d46",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed0d890a_b577881f",
        "filename": "shell/openstack-cleanup-orphaned-stacks.sh",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1
      },
      "writtenOn": "2019-06-07T00:59:07Z",
      "side": 1,
      "message": "Tim, I think you\u0027re correct that the proper fix is in lftools itself and not here in global-jjb.\n\nWe should have lftools attempting to delete everything and logging out an error of everything that it fails to take care of. The problem we currently have is that we \"fail fast\" by which I mean we fail on the first error, which means if the error happens early in the loop then all the other resources that might be something we can clean-up get ignored until the problem issue gets resolved (many times requiring us to open a ticket with the cloud provider).",
      "parentUuid": "5446b4e3_b250b860",
      "range": {
        "startLine": 90,
        "startChar": 8,
        "endLine": 90,
        "endChar": 60
      },
      "revId": "3fca00a49b306981b626b440f3d287f9195b2d46",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    }
  ]
}