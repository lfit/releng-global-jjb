{
  "comments": [
    {
      "key": {
        "uuid": "2c73f28d_28490796",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 114
      },
      "writtenOn": "2019-11-27T14:14:29Z",
      "side": 1,
      "message": "This issue is private, not much value in having it in a gerrit commit :(",
      "range": {
        "startLine": 17,
        "startChar": 10,
        "endLine": 17,
        "endChar": 18
      },
      "revId": "511b04429dceec089099eac83c408c97d85652cd",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98c8282f_1921eaee",
        "filename": "shell/jenkins-verify-images.sh",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 114
      },
      "writtenOn": "2019-11-27T14:14:29Z",
      "side": 1,
      "message": "Thanks for the patch, but is there a way to write this that avoids repeating the same code twice? Why not do the grep, then test the result for -z and default it to vex up here, instead?",
      "range": {
        "startLine": 47,
        "startChar": 23,
        "endLine": 47,
        "endChar": 41
      },
      "revId": "511b04429dceec089099eac83c408c97d85652cd",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be66137d_56434b17",
        "filename": "shell/jenkins-verify-images.sh",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 12
      },
      "writtenOn": "2019-11-27T15:30:49Z",
      "side": 1,
      "message": "os_cloud\u003d$(grep ^OS_CLOUD\u003d \"$cloud/cloud.cfg\" | cut -d\u0027\u003d\u0027 -f2) \ntriggers the pipe fail.",
      "parentUuid": "98c8282f_1921eaee",
      "range": {
        "startLine": 47,
        "startChar": 23,
        "endLine": 47,
        "endChar": 41
      },
      "revId": "511b04429dceec089099eac83c408c97d85652cd",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07001f5e_edc4c98d",
        "filename": "shell/jenkins-verify-images.sh",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 114
      },
      "writtenOn": "2019-11-27T15:41:12Z",
      "side": 1,
      "message": "Yes I understand that the grep finds nothing and triggers the pipe fail.  I\u0027m trying to ask, why not do something like:\n\n    os_cloud\u003d$(grep ^OS_CLOUD\u003d \"$cloud/cloud.cfg\")\n    os_cloud\u003d\"${os_cloud:-vex}\"\n    os_cloud\u003d$(echo $os_cloud | cut -d\u0027\u003d\u0027 -f2)\n\nOr something along those lines.  But Tim Johnson, the shell script wizard, can probably teach me how to do this in 7 characters :D",
      "parentUuid": "be66137d_56434b17",
      "range": {
        "startLine": 47,
        "startChar": 23,
        "endLine": 47,
        "endChar": 41
      },
      "revId": "511b04429dceec089099eac83c408c97d85652cd",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fcb63bf_eca4d73c",
        "filename": "shell/jenkins-verify-images.sh",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 182
      },
      "writtenOn": "2019-11-27T15:50:06Z",
      "side": 1,
      "message": "for cloud in jenkins-config/clouds/openstack/*; do\n    if [[ -f $cloud/cloud.cfg ]]; then\n        # Get the OS_CLOUD variable from cloud config\n        if ! os_cloud\u003d$(egrep \"^OS_CLOUD\u003d\" $cloud/cloud.cfg | cut -d\u0027\u003d\u0027 -f2); then\n            os_cloud\u003d\"vex\"\n        fi\n        OS_CLOUD\u003d$os_cloud verify_images \"$cloud\"\n    else\n        echo \"ERROR: No cloud.cfg for $cloud\"\n        error\u003dtrue\n    fi\ndone\n\nAlways limit scope of env var when possible. Note I added \"\" around RE for egrep. I did not test this, but I bet it is pretty close",
      "parentUuid": "be66137d_56434b17",
      "range": {
        "startLine": 47,
        "startChar": 23,
        "endLine": 47,
        "endChar": 41
      },
      "revId": "511b04429dceec089099eac83c408c97d85652cd",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    }
  ]
}