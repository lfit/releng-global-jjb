{
  "comments": [
    {
      "key": {
        "uuid": "156e912c_1e9fe7d9",
        "filename": "shell/logs-deploy.sh",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1
      },
      "writtenOn": "2019-09-09T19:46:13Z",
      "side": 1,
      "message": "Dropping the -l is likely not a good idea. IIRC we added that to work around certain issues that Jenkins has and the fact we need most shell scripts to run as if it\u0027s a logged in user.\n\nIt was added in I55947020e2f0cdbb61f9d4e7e88927d9bc304d17",
      "revId": "5d367c4d3fff5f57f67a722680a1425906a7a81c",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c1bc7dd_81de55e8",
        "filename": "shell/logs-deploy.sh",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 182
      },
      "writtenOn": "2019-09-09T22:05:41Z",
      "side": 1,
      "message": "I know it has been added all over the place. I talked with Thahn when he was debating how to handle/control the environment of these scripts. We talked about several approaches, none of which were perfect. The only approach I told him NOT to pursue was the -l. Seriously this would make Ken Thompson roll over in his grave. There is a reason that aliases, functions and shell variables are NOT passed on to children.\n\nThe environment is the part of a process that get inherited by it children (PATH, CWD, TERM) that are needed by sub-shells. Many/most of the files sourced by -l are specific to an interactive shell (they assume -ue is not set). Some of files sourced are owned by the user and it would be impossible to write a usable shell script that sourced user scripts. The only thing that should be calling bash -l is init. Bash is really two languages: a interactive process and a batch one. We want a child process to inherit what is needed from it parent, but to essential have a clean namespace.\n\nDo we know how many files get sourced when you add the \u0027-l\u0027? Bash pretty much works the same on all distros but the content of sourced files is VERY distro specific. They even change within each release of the distro. We want to remain isolated from that.  BTW on Ubuntu I couldn\u0027t run\u0027bash -eul\u0027 because of the \u0027-u\u0027. The only reason the \u0027-l\u0027 works as well as it does for us is because this script is only run by one user, If this script were used  by multiple users it would be a disaster. BTW people do run some scripts in a VM (The HL developers do it all the time).\n\nYou are correct Jenkins has really made a mess of controlling the environment of the scripts. Both the previous times I used Jenkins as a scheduler, we isolated ourselves from what Jenkins was trying to do. Jenkins called ONE script that controlled the entire build. BTW the first line of the top level script overrode PATH\u003da:b:c \n\nIf there is some environment (functions alias variables) that need to be shared by multiple scripts then we source a file (that WE control). It is a essentially a bash \u0027library\u0027 that is specific to batch scripts. In HL I created a file ~/.lfenv that contains some functions/aliases that are shared across multiple scripts.\n\nI very well may be missing something here, but at the time Thanh was unable to articulate what that was. Adding the -l does not really change the environment of a script it really only effects the shell environment from the login scripts (called by -l) which are meant for interactive shell, not a batch script. The true environment (ENV vars comes from the login shell that is a parent (possible about 10 levels up, and probably mangled by Jenkins).",
      "parentUuid": "156e912c_1e9fe7d9",
      "revId": "5d367c4d3fff5f57f67a722680a1425906a7a81c",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34cd224d_90f9ba30",
        "filename": "shell/logs-deploy.sh",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 8
      },
      "writtenOn": "2019-09-09T23:07:54Z",
      "side": 1,
      "message": "The `-l` is necessary for Jenkins shell to add `~/.local/bin` to the path which we depend on because of our use of `pip install --user` to install Python based CLI tools such as lftools and openstack. Without this we would need to add `~/.local/bin` to every single file that wants to use `lftools` and `openstack`, but that\u0027s just a birds eye view from global-jjb\u0027s perspective, downstream project might depend further on additional CLI tools that they are installing in their own projects as well.\n\nIn isolation in the context of just this one script this seems fine. This change might break if applied to other scripts so we should definitely test and confirm before blanket removing `-l` in all scripts. One reason I would keep `-l` is for consistency, folks tend to copy/paste scripts from existing scripts to build upon their own scripts, having varing uses means folks might copy from the wrong scripts and we would have to support multiple methods.\n\nOne of the reasons we went with `-l` is it\u0027s a lot easier to tell all our consumers of global-jjb that they need to `#!/bin/bash -l` in their scripts than to tell them to ` PATH\u003d\"$PATH:~/.local/bin\" ` in every single shell script.\n\nWith that said I\u0027m far from the authority on this so if we want to change how we recommend our downstreams consume global-jjb I would recommend detailed documentation of the recommended path and communicating it to the communities so that folks are not surprised if something breaks somewhere.",
      "parentUuid": "4c1bc7dd_81de55e8",
      "revId": "5d367c4d3fff5f57f67a722680a1425906a7a81c",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a833c845_46075d20",
        "filename": "shell/logs-deploy.sh",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 12
      },
      "writtenOn": "2019-09-09T20:35:07Z",
      "side": 1,
      "message": "is this to work around your removal of -l?\nI would prefer to keep the -l as well.",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 22
      },
      "revId": "5d367c4d3fff5f57f67a722680a1425906a7a81c",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb0e5dc8_c7cfdaf7",
        "filename": "shell/logs-deploy.sh",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 182
      },
      "writtenOn": "2019-09-09T22:05:41Z",
      "side": 1,
      "message": "Why source 100\u0027s of lines of unknown lines of scripts (that changes for every distro) just to modify the PATH? In fact, since we only call lftools twice I would make the case that we should just execute it directly (~/.local/bin/lftools) and not even add it to the PATH. Although I bet lftools expects PATH to be set (which is NOT correct), if lftools needs something in its path it should add it.",
      "parentUuid": "a833c845_46075d20",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 22
      },
      "revId": "5d367c4d3fff5f57f67a722680a1425906a7a81c",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f12e51e_c04a40bf",
        "filename": "shell/logs-deploy.sh",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1
      },
      "writtenOn": "2019-09-09T19:46:13Z",
      "side": 1,
      "message": "Is there a reason you\u0027re dropping the null case handler if the $BUILD_URL isn\u0027t set?",
      "range": {
        "startLine": 54,
        "startChar": 47,
        "endLine": 54,
        "endChar": 57
      },
      "revId": "5d367c4d3fff5f57f67a722680a1425906a7a81c",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4ff2427_54a6b7dc",
        "filename": "shell/logs-deploy.sh",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 182
      },
      "writtenOn": "2019-09-09T22:05:41Z",
      "side": 1,
      "message": "This is a good question.... what happens if an empty string is passed to lftools?  A URL of \"\" make no sense. Now it lftools documented that it does something useful with the \"\" then I am all for it. If BUILD_URL is not set, the script (and the build) stops right here.\n\nSo the answer is I don\u0027t know it this should be quoted or not. The quotes are probably there just to make sure \u0027shellcheck\u0027 does not whine. I am assuming that \"\" not a valid URL for lftools rather than hope that lftools does something reasonable.",
      "parentUuid": "1f12e51e_c04a40bf",
      "range": {
        "startLine": 54,
        "startChar": 47,
        "endLine": 54,
        "endChar": 57
      },
      "revId": "5d367c4d3fff5f57f67a722680a1425906a7a81c",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dba2dd1b_6fcd457c",
        "filename": "shell/logs-deploy.sh",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 8
      },
      "writtenOn": "2019-09-09T23:07:54Z",
      "side": 1,
      "message": "As long as the script is run inside Jenkins BUILD_URL can be assumed to exist. What I\u0027d be surprised about is that the `set -u` above is not causing this line to fail due to the -u check (Did you test this script in an actual job?).",
      "parentUuid": "e4ff2427_54a6b7dc",
      "range": {
        "startLine": 54,
        "startChar": 47,
        "endLine": 54,
        "endChar": 57
      },
      "revId": "5d367c4d3fff5f57f67a722680a1425906a7a81c",
      "serverId": "f2a2391d-0403-4fa5-b183-4056999a8a09",
      "unresolved": true
    }
  ]
}