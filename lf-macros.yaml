---
- parameter:
    name: lf-infra-parameters
    parameters:
      - string:
          name: PROJECT
          default: '{project}'
          description: |
              Parameter to identify a Gerrit project. This is typically the
              project repo path as exists in Gerrit.
              For example: ofextensions/circuitsw

- parameter:
    name: lf-infra-gerrit-parameters
    parameters:
      - string:
          name: GERRIT_PROJECT
          default: '{project}'
          description: |
              Parameter to identify Gerrit project. This is typically the
              project repo path as exists in Gerrit.
              For example: ofextensions/circuitsw

              Note that Gerrit will override this parameter automatically if a
              job is triggered by Gerrit.
      - string:
          name: GERRIT_BRANCH
          default: '{branch}'
          description: |
              Parameter to identify a Gerrit branch.

              Note that Gerrit will override this parameter automatically if a
              job is triggered by Gerrit.
      - string:
          name: GERRIT_REFSPEC
          default: ''
          description: |
              Parameter to identify a refspec when pulling from Gerrit.

              Note that Gerrit will override this parameter automatically if a
              job is triggered by Gerrit.

- property:
    name: lf-infra-properties
    properties:
      - build-discarder:
          # Allow build data to be stored at a length configured by the
          # downstream project.
          days-to-keep: '{build-days-to-keep}'
          # Do not allow artifacts to be stored in Jenkins.
          artifact-num-to-keep: 0

######################
# SCM Configurations #
######################

# This section defines generic SCMs that can be used in a job to pull code from
# a version control repo.
#
# There are 2 types of SCMs that we should be mindful about.
#
#   1) SCM for merge jobs
#
#      In this scenario we purposely want to ensure that parameters passed into
#      this job type to are purposely not passing any parameters that might be
#      variable for example using GERRIT parameters. This allows Jenkins to
#      properly detect that a job already queued is the same as a new build that
#      would like to be queued. That way Gerrit will not queue more than 1 merge
#      job simultaniously.
#
#   2) SCM for verify jobs
#
#      For verify jobs we want to allow many of them to queue and run
#      simultaniously. In this case we don't mind that parameters are different
#      thus allowing Jenkins to detect that even though the same job is being
#      queued it is a different build run.

- scm:
    name: lf-infra-gerrit-scm
    scm:
      - git:
          credentials-id: '{jenkins-ssh-credential}'
          url: '$GIT_BASE'  # $GIT_BASE contains $PROJECT which must by passed into job
          refspec: '{refspec}'
          branches:
            - 'refs/heads/{branch}'
          skip-tag: true
          wipe-workspace: true
          submodule:
            recursive: '{submodule-recursive}'
          choosing-strategy: '{choosing-strategy}'

- wrapper:
    name: lf-infra-wrappers
    wrappers:
      - mask-passwords
      - timeout:
          type: absolute
          timeout: '{build-timeout}'
          timeout-var: 'BUILD_TIMEOUT'
          fail: true
      - timestamps
      - ssh-agent-credentials:
          users:
            - '{jenkins-ssh-credential}'
      - openstack:
          single-use: true
