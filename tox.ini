[tox]
minversion = 1.6
envlist =
  ensure-documented,
  jjb,
  jjb-compare-xml,
  jjb-latest,
  jjb-version,
  license,
  bashate,
  pre-commit
skipsdist = True

[testenv:docs]
basepython = python3
deps = -rrequirements.txt
commands =
    sphinx-build -W -b html -n -d {envtmpdir}/doctrees ./docs/ {toxinidir}/docs/_build/html

[testenv:ensure-documented]
commands =
    ./ensure-documented.sh

[testenv:jjb]
basepython = python3
deps =
    jenkins-job-builder==2.8.0
commands =
    jenkins-jobs -l DEBUG test --recursive -o {toxinidir}/archives/job-configs {toxinidir}/jjb:{toxinidir}/.jjb-test

[testenv:jjb-compare-xml]
basepython = python3
deps =
    jenkins-job-builder
commands =
    ./jjb-compare-xml.sh

[testenv:jjb-latest]
basepython = python3
deps =
    jenkins-job-builder
commands =
    jenkins-jobs -l DEBUG test --recursive -o {toxinidir}/archives/job-configs {toxinidir}/jjb:{toxinidir}/.jjb-test

[testenv:jjb-version]
basepython = python3
commands = python {toxinidir}/check_jjb_version.py

[testenv:license]
deps = lftools
commands = lftools license check-dir -r '.+' shell

[testenv:pre-commit]
basepython = python3
allowlist_externals =
    /bin/sh
deps =
    pre-commit
passenv = HOME
commands =
    pre-commit run --all-files --show-diff-on-failure
    /bin/sh -c 'if ! git config --get user.name > /dev/null; then \
        git config --global --add user.name "CI"; \
        touch .git/REMOVE_USERNAME; fi'
    /bin/sh -c 'if ! git config --get user.email > /dev/null; then \
        git config --global --add user.email "ci@example.org"; \
        touch .git/REMOVE_USEREMAIL; fi'
    /bin/sh -c "if [ -f .git/COMMIT_EDITMSG ]; then \
        cp .git/COMMIT_EDITMSG .git/COMMIT_MSGTOX; else \
        git log HEAD -n1 | tail -n +5 | cut -c 5- > .git/COMMIT_MSGTOX; fi"
    pre-commit run gitlint --hook-stage commit-msg --commit-msg-filename .git/COMMIT_MSGTOX
    /bin/sh -c "rm -f .git/COMMIT_MSGTOX"
    /bin/sh -c "if [ -f .git/REMOVE_USERNAME ]; then \
        git config --global --unset user.name; \
        rm -f .git/REMOVE_USERNAME; fi"
    /bin/sh -c "if [ -f .git/REMOVE_USEREMAIL ]; then \
        git config --global --unset user.email; \
        rm -f .git/REMOVE_USEREMAIL; fi"

[testenv:bashate]
basepython = python3
deps =
    bashate
whitelist_externals = sh
                      find
commands =
    find . -not -path '*/\.*' -name *.sh -exec bashate  \{\} +
    #The option --max-line-length 80 is used by default.

#########
# Tools #
#########

[testenv:jenkins-jobs]
deps =
    jenkins-job-builder{env:JJB_VERSION_OP:~=}{env:JJB_VERSION:2.8.0}
commands =
    jenkins-jobs {posargs:--help}

[testenv:lftools]
deps = lftools{env:LFTOOLS_VERSION_OP:~=}{env:LFTOOLS_VERSION:0.13.0}
commands = lftools {posargs:--help}

[testenv:openstack]
deps = python-openstackclient{env:OPENSTACK_VERSION_OP:~=}{env:OPENSTACK_VERSION:3.15.0}
commands = openstack {posargs:--help}

[testenv:reno]
deps = reno{env:RENO_VERSION_OP:~=}{env:RENO_VERSION:2.11.2}
commands = reno {posargs:--help}
