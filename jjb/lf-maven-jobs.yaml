---
# This file contains job templates for Maven projects.

- job-group:
    name: '{project-name}-maven-jobs'

    # This job group contains all the recommended jobs that should be deployed
    # for any project ci.

    jobs:
      - gerrit-maven-clm
      - gerrit-maven-release
      - gerrit-maven-verify

- job-group:
    name: '{project-name}-github-maven-jobs'

    # This job group contains all the recommended jobs that should be deployed
    # for any project ci that is using github.

    jobs:
      - github-maven-clm
      - github-maven-release
      - github-maven-verify

####################
# COMMON FUNCTIONS #
####################

- lf_maven_common: &lf_maven_common
    name: lf-maven-common

    project-type: freestyle
    node: '{build-node}'
    jdk: '{java-version}'

    properties:
      - lf-infra-properties:
          build-days-to-keep: '{build-days-to-keep}'

    parameters:
      - lf-infra-parameters:
          project: '{project}'
          branch: '{branch}'
          stream: '{stream}'
          lftools-version: '{lftools-version}'
      - lf-infra-maven-parameters:
          mvn-opts: '{mvn-opts}'
          mvn-params: '{mvn-params}'
          mvn-version: '{mvn-version}'
          # Staging repos do not make sense for CLM jobs so set it blank.
          staging-profile-id: '{staging-profile-id}'

    wrappers:
      - lf-infra-wrappers:
          build-timeout: '{build-timeout}'
          jenkins-ssh-credential: '{jenkins-ssh-credential}'

    publishers:
      # TODO: Make email notification work.
      # - lf-infra-email-notify:
      #     email-recipients: '{email-recipients}'
      #     email-prefix: '[releng]'
      - lf-infra-publish

#############
# Maven CLM #
#############

- lf_maven_clm: &lf_maven_clm
    name: lf-maven-clm

    # Produces a CLM scan of the code into Nexus IQ Server.
    #
    # Required parameters:
    #     build-node:    The node to run build on.
    #     jenkins-ssh-credential: Credential to use for SSH. (Generally should
    #                             be configured in defaults.yaml)
    #     mvn-settings: The name of settings file containing credentials for
    #                   the project.
    #
    # Optional parameters:
    #     mvn-global-settings: The name of the Maven global settings to use for
    #                          Maven configuration. (default: global-settings)

    ######################
    # Default parameters #
    ######################

    branch: master
    build-days-to-keep: 30  # 30 days for troubleshooting purposes
    build-timeout: 15
    git-url: '$GIT_URL/$PROJECT'
    java-version: openjdk8
    mvn-global-settings: global-settings
    mvn-opts: ''
    mvn-params: ''
    mvn-version: mvn33
    stream: master
    submodule-recursive: true

    # Staging repos do not make sense for CLM jobs so set it blank.
    staging-profile-id: ''

    #####################
    # Job Configuration #
    #####################

    triggers:
      # Build weekly on Saturdays
      - timed: 'H H * * 6'

    builders:
      - lf-maven-install:
          mvn-version: '{mvn-version}'
      - lf-provide-maven-settings:
          global-settings-file: '{mvn-global-settings}'
          settings-file: '{mvn-settings}'
      - shell: !include-raw-escape:
          - ../shell/common-variables.sh
          - ../shell/sonatype-clm.sh
      - lf-provide-maven-settings-cleanup
      - shell: 'find . -regex ".*karaf/target" | xargs rm -rf'
      - sonatype-clm:
          application-name: '{project-name}'

- job-template:
    name: '{project-name}-maven-clm-{stream}'
    id: gerrit-maven-clm
    <<: *lf_maven_common
    # yamllint disable-line rule:key-duplicates
    <<: *lf_maven_clm

    scm:
      - lf-infra-gerrit-scm:
          jenkins-ssh-credential: '{jenkins-ssh-credential}'
          git-url: '{git-url}'
          refspec: '$GERRIT_REFSPEC'
          branch: '$GERRIT_BRANCH'
          submodule-recursive: '{submodule-recursive}'
          choosing-strategy: default

- job-template:
    name: '{project-name}-maven-clm-{stream}'
    id: github-maven-clm
    <<: *lf_maven_common
    # yamllint disable-line rule:key-duplicates
    <<: *lf_maven_clm

    properties:
      - github:
          url: '{git-url}/{github-org}/{project}'

    scm:
      - lf-infra-github-scm:
          url: '{git-clone-url}{github-org}/{project}'
          refspec: '+refs/pull/*:refs/remotes/origin/pr/*'
          branch: '{branch}'
          submodule-recursive: '{submodule-recursive}'
          choosing-strategy: default
          jenkins-ssh-credential: '{jenkins-ssh-credential}'

#################
# Maven Release #
#################

- lf_maven_release: &lf_maven_release
    name: lf-maven-release

    # Produces a release candidate by creating a staging repo in Nexus.
    #
    # Runs a Maven build and deploys to $WORKSPACE/m2repo directory. This
    # directory can then be reused later to deploy to Nexus.
    #
    # Required parameters:
    #     build-node:    The node to run build on.
    #     jenkins-ssh-credential: Credential to use for SSH. (Generally should
    #                             be configured in defaults.yaml)
    #     mvn-settings: The name of settings file containing credentials for
    #                   the project.
    #     staging-profile-id: Profile ID of the project's Nexus staging profile.
    #
    # Optional parameters:
    #     mvn-global-settings: The name of the Maven global settings to use for
    #                          Maven configuration. (default: global-settings)

    ######################
    # Default parameters #
    ######################

    branch: master
    build-days-to-keep: 30  # 30 days in case a release takes long to get approved.
    build-timeout: 30
    git-url: '$GIT_URL/$PROJECT'
    java-version: openjdk8
    mvn-global-settings: global-settings
    mvn-opts: ''
    mvn-params: ''
    mvn-version: mvn33
    stream: master
    submodule-recursive: true

    #####################
    # Job Configuration #
    #####################

    builders:
      - lf-jacoco-nojava-workaround
      - lf-maven-install:
          mvn-version: '{mvn-version}'
      - lf-provide-maven-settings:
          global-settings-file: '{mvn-global-settings}'
          settings-file: '{mvn-settings}'
      - lf-infra-create-netrc:
          server-id: opendaylight-staging
      - shell: !include-raw-escape:
          - ../shell/lftools-install.sh
          - ../shell/common-variables.sh
          - ../shell/maven-patch-release.sh
          - ../shell/maven-build.sh
          - ../shell/maven-stage.sh
      - lf-provide-maven-settings-cleanup

- job-template:
    name: '{project-name}-maven-release-{stream}'
    id: gerrit-maven-release
    <<: *lf_maven_common
    # yamllint disable-line rule:key-duplicates
    <<: *lf_maven_release

    scm:
      - lf-infra-gerrit-scm:
          jenkins-ssh-credential: '{jenkins-ssh-credential}'
          git-url: '{git-url}'
          refspec: '$GERRIT_REFSPEC'
          branch: '$GERRIT_BRANCH'
          submodule-recursive: '{submodule-recursive}'
          choosing-strategy: default

- job-template:
    name: '{project-name}-maven-release-{stream}'
    id: github-maven-release
    <<: *lf_maven_common
    # yamllint disable-line rule:key-duplicates
    <<: *lf_maven_release

    properties:
      - github:
          url: '{git-url}/{github-org}/{project}'

    scm:
      - lf-infra-github-scm:
          url: '{git-clone-url}{github-org}/{project}'
          refspec: '+refs/pull/*:refs/remotes/origin/pr/*'
          branch: '{branch}'
          submodule-recursive: '{submodule-recursive}'
          choosing-strategy: default
          jenkins-ssh-credential: '{jenkins-ssh-credential}'

################
# Maven Verify #
################

- lf_maven_verify: &lf_maven_verify
    name: lf-maven-verify

    # Verify job which runs mvn clean install to test a project build..
    #
    # Required parameters:
    #
    #     :build-node: The node to run build on.
    #     :jenkins-ssh-credential: Credential to use for SSH. (Generally should
    #         be configured in defaults.yaml)
    #     :mvn-settings: The name of settings file containing credentials for
    #         the project.
    #
    # Optional parameters:
    #
    #     :branch: Git branch to fetch for the build. (default: master)
    #     :build-days-to-keep: Days to keep build logs in Jenkins. (default: 7)
    #     :build-timeout: Timeout in seconds before aborting build. (default: 60)
    #     :git-url: URL clone project from. (default: $GIT_URL/$PROJECT)
    #     :java-version: Version of Java to use for the build. (default: openjdk8)
    #     :mvn-global-settings: The name of the Maven global settings to use for
    #         Maven configuration. (default: global-settings)
    #     :mvn-opts: Sets MAVEN_OPTS. (default: '')
    #     :mvn-params: Additional mvn parameters to pass to the cli. (default: '')
    #     :mvn-version: Version of maven to use. (default: mvn33)
    #     :stream: Keyword that can be used to represent a release code-name.
    #         Often the same as the branch. (default: master)
    #     :submodule-recursive: Whether to checkout submodules recursively.
    #         (default: true)
    #
    #     :gerrit_verify_triggers: Override Gerrit Triggers.
    #     :gerrit_trigger_file_paths: Override file paths which can be used to
    #         filter which file modifications will trigger a build.

    ######################
    # Default parameters #
    ######################

    branch: master
    build-days-to-keep: 7
    build-timeout: 60
    git-url: '$GIT_URL/$PROJECT'
    java-version: openjdk8
    mvn-global-settings: global-settings
    mvn-opts: ''
    mvn-params: '-Dstream=$STREAM'
    mvn-version: mvn33
    stream: master
    submodule-recursive: true

    gerrit_verify_triggers:
      - patchset-created-event:
          exclude-drafts: false
          exclude-trivial-rebase: false
          exclude-no-code-change: false
      - draft-published-event
      - comment-added-contains-event:
          comment-contains-value: recheck$
    gerrit_trigger_file_paths:
      - compare-type: ANT
        pattern: '**'

    #####################
    # Job Configuration #
    #####################

    concurrent: true

    builders:
      - lf-jacoco-nojava-workaround
      - lf-maven-install:
          mvn-version: '{mvn-version}'
      - lf-provide-maven-settings:
          global-settings-file: '{mvn-global-settings}'
          settings-file: '{mvn-settings}'
      - shell: !include-raw-escape:
          - ../shell/lftools-install.sh
          - ../shell/common-variables.sh
          - ../shell/maven-build.sh
      - lf-provide-maven-settings-cleanup

    publishers:
      - findbugs
      - lf-jacoco-report
      - lf-infra-publish

- job-template:
    name: '{project-name}-maven-verify-{stream}-{mvn-version}-{java-version}'
    id: gerrit-maven-verify
    <<: *lf_maven_common
    # yamllint disable-line rule:key-duplicates
    <<: *lf_maven_verify

    scm:
      - lf-infra-gerrit-scm:
          jenkins-ssh-credential: '{jenkins-ssh-credential}'
          git-url: '{git-url}'
          refspec: '$GERRIT_REFSPEC'
          branch: '$GERRIT_BRANCH'
          submodule-recursive: '{submodule-recursive}'
          choosing-strategy: gerrit

    triggers:
      - gerrit:
          server-name: '{gerrit-server-name}'
          trigger-on: '{obj:gerrit_verify_triggers}'
          projects:
            - project-compare-type: ANT
              project-pattern: '{project}'
              branches:
                - branch-compare-type: ANT
                  branch-pattern: '**/{branch}'
              file-paths: '{obj:gerrit_trigger_file_paths}'

- job-template:
    name: '{project-name}-maven-verify-{stream}-{mvn-version}-{java-version}'
    id: github-maven-verify
    <<: *lf_maven_common
    # yamllint disable-line rule:key-duplicates
    <<: *lf_maven_verify

    properties:
      - github:
          url: '{git-url}/{github-org}/{project}'

    scm:
      - lf-infra-github-scm:
          url: '{git-clone-url}{github-org}/{project}'
          refspec: '+refs/pull/*:refs/remotes/origin/pr/*'
          branch: '{branch}'
          submodule-recursive: '{submodule-recursive}'
          choosing-strategy: default
          jenkins-ssh-credential: '{jenkins-ssh-credential}'

    triggers:
      - lf-infra-github-pr-trigger:
          trigger-phrase: '^recheck$'
          only-trigger-phrase: false
          status-context: 'Maven Verify'
          permit-all: true
          github-hooks: true
          github-org: ''
          github_pr_whitelist:
            - ''
          github_pr_admin_list:
            - ''

###############
# Maven Sonar #
###############

- lf_maven_sonar: &lf_maven_sonar
    name: lf-maven-sonar

    # Sonar job which runs mvn clean install then publishes to Sonar.
    #
    # This job purposely only runs on the master branch as there are Additional
    # configuration needed to support multiple branches and there's not much
    # interest in that kind of support.
    #
    # Required parameters:
    #
    #     :build-node: The node to run build on.
    #     :jenkins-ssh-credential: Credential to use for SSH. (Generally should
    #         be configured in defaults.yaml)
    #     :mvn-settings: The name of settings file containing credentials for
    #         the project.
    #
    # Optional parameters:
    #
    #     :build-days-to-keep: Days to keep build logs in Jenkins. (default: 7)
    #     :build-timeout: Timeout in seconds before aborting build. (default: 60)
    #     :git-url: URL clone project from. (default: $GIT_URL/$PROJECT)
    #     :java-version: Version of Java to use for the build. (default: openjdk8)
    #     :mvn-global-settings: The name of the Maven global settings to use for
    #         Maven configuration. (default: global-settings)
    #     :mvn-opts: Sets MAVEN_OPTS. (default: '')
    #     :mvn-params: Additional mvn parameters to pass to the cli. (default: '')
    #     :mvn-version: Version of maven to use. (default: mvn33)
    #     :submodule-recursive: Whether to checkout submodules recursively.
    #         (default: true)
    #
    #     :gerrit_sonar_triggers: Override Gerrit Triggers.

    ######################
    # Default parameters #
    ######################

    branch: master  # Sonar should always be run on master branch
    build-days-to-keep: 7
    build-timeout: 30
    git-url: '$GIT_URL/$PROJECT'
    java-version: openjdk8
    mvn-global-settings: global-settings
    mvn-opts: ''
    mvn-params: ''
    mvn-version: mvn33
    stream: master
    submodule-recursive: true

    gerrit_sonar_triggers:
      - comment-added-contains-event:
          comment-contains-value: run-sonar$

    # Staging repos do not make sense for CLM jobs so set it blank.
    staging-profile-id: ''

    #####################
    # Job Configuration #
    #####################

    triggers:
      - timed: 'H H * * 6'
      - gerrit:
          server-name: '{gerrit-server-name}'
          trigger-on: '{obj:gerrit_sonar_triggers}'
          projects:
            - project-compare-type: 'ANT'
              project-pattern: '{project}'
              branches:
                - branch-compare-type: 'ANT'
                  branch-pattern: '**/master'
          skip-vote:
            successful: true
            failed: true
            unstable: true
            notbuilt: true

    builders:
      - lf-infra-maven-sonar:
          mvn-settings: '{mvn-settings}'
          mvn-version: '{mvn-version}'

    publishers:
      - lf-jacoco-report
      - findbugs
      - lf-infra-publish

- builder:
    name: lf-infra-maven-sonar
    # Run a Sonar build with Maven
    builders:
      - lf-maven-install:
          mvn-version: '{mvn-version}'
      - inject:
          # Switch this to the sonar wrapper when JJB 2.0 is available
          properties-content: |
              SONAR_HOST_URL=$SONAR_URL
              SONAR_MAVEN_GOAL=sonar:sonar
      - lf-provide-maven-settings:
          global-settings-file: global-settings
          settings-file: '{mvn-settings}'
      - shell: !include-raw-escape:
          - ../shell/common-variables.sh
          - ../shell/maven-sonar.sh
      - lf-provide-maven-settings-cleanup

- job-template:
    name: '{project-name}-sonar'
    id: gerrit-maven-sonar
    <<: *lf_maven_common
    # yamllint disable-line rule:key-duplicates
    <<: *lf_maven_sonar

    scm:
      - lf-infra-gerrit-scm:
          jenkins-ssh-credential: '{jenkins-ssh-credential}'
          git-url: '{git-url}'
          refspec: $GERRIT_REFSPEC
          branch: $GERRIT_BRANCH
          submodule-recursive: '{submodule-recursive}'
          choosing-strategy: default

- job-template:
    name: '{project-name}-sonar'
    id: github-maven-sonar
    <<: *lf_maven_common
    # yamllint disable-line rule:key-duplicates
    <<: *lf_maven_sonar

    properties:
      - github:
          url: '{git-url}/{github-org}/{project}'

    scm:
      - lf-infra-github-scm:
          url: '{git-clone-url}{github-org}/{project}'
          refspec: '+refs/pull/*:refs/remotes/origin/pr/*'
          branch: '{branch}'
          submodule-recursive: '{submodule-recursive}'
          choosing-strategy: default
          jenkins-ssh-credential: '{jenkins-ssh-credential}'

    triggers:
      - lf-infra-github-pr-trigger:
          trigger-phrase: '^recheck$'
          only-trigger-phrase: false
          status-context: 'Maven Verify'
          permit-all: true
          github-hooks: true
          github-org: ''
          github_pr_whitelist:
            - ''
          github_pr_admin_list:
            - ''
