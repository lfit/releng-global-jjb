---
- job-group:
    name: '{project-name}-node-jobs'

    # This job group contains all the recommended jobs that should be deployed
    # for any project ci that is using Gerrit.

    node-version: 6.9.4

    jobs:
      - gerrit-node-verify

- job-group:
    name: '{project-name}-github-node-jobs'

    # This job group contains all the recommended jobs that should be deployed
    # for any project ci that is using GitHub.

    node-version: 6.9.4

    jobs:
      - github-node-verify

###############
# Node Verify #
###############

- lf_tox_verify: &lf_node_verify
    name: lf-node-verify

    # Required Variables:
    #     stream:    release stream (eg. boron or carbon)
    #     branch:    git branch (eg. stable/boron or master)
    #     nodedir:   directory of nodejs project to run node test against
    #     node-version:   version of node to install in virtualenv

    project-type: freestyle
    node: '{build-node}'
    concurrent: true

    ######################
    # Default parameters #
    ######################

    branch: master
    build-timeout: 10
    git-url: '$GIT_URL/$GERRIT_PROJECT'
    stream: master
    submodule-recursive: true
    nodedir: ''

    #####################
    # Job Configuration #
    #####################

    properties:
      - lf-infra-properties:
          build-days-to-keep: 7

    parameters:
      - lf-infra-parameters:
          project: '{project}'
          branch: '{branch}'
          stream: '{stream}'
          lftools-version: '{lftools-version}'
      - lf-infra-node-parameters:
          nodedir: '{nodedir}'
          node-version: '{node-version}'

    wrappers:
      - lf-infra-wrappers:
          build-timeout: '{build-timeout}'
          jenkins-ssh-credential: '{jenkins-ssh-credential}'

    builders:
      - shell: !include-raw-escape:
          # Workaround issue where the tox run later breaks the lftools virtualenv.
          # Without running the install first the run in the publisher will fail
          # due to missing lftools because it gets installed into a tox venv.
          - ../shell/lftools-install.sh
      - shell: !include-raw-escape:
          - ../shell/node-install.sh
          - ../shell/node-run.sh

    publishers:
      - lf-infra-publish

- job-template:
    # Python projects typically use tox to run testing.
    name: '{project-name}-node-verify-{stream}'
    id: github-node-verify
    <<: *lf_node_verify

    properties:
      - github:
          url: '{git-url}/{github-org}/{project}'

    scm:
      - lf-infra-github-scm:
          url: '{git-clone-url}{github-org}/{project}'
          refspec: '+refs/pull/*:refs/remotes/origin/pr/*'
          branch: '{branch}'
          submodule-recursive: '{submodule-recursive}'
          choosing-strategy: default
          jenkins-ssh-credential: '{jenkins-ssh-credential}'

    triggers:
      - github-pull-request:
          trigger-phrase: '^recheck$'
          only-trigger-phrase: false
          status-context: 'JJB Verify'
          permit-all: true
          github-hooks: true
          auto-close-on-fail: false

- job-template:
    name: '{project-name}-verify-node-{stream}'
    id: gerrit-node-verify
    <<: *lf_node_verify
    # Python jobs to run node verify tests

    # The purpose of this job template is to run node tests for projects using
    # this template. It uses python virtualenv to install nodeenv and create a
    # virtualenv for nodejs.

    ######################
    # Default parameters #
    ######################

    gerrit_verify_triggers:
      - patchset-created-event:
          exclude-drafts: false
          exclude-trivial-rebase: false
          exclude-no-code-change: false
      - draft-published-event
      - comment-added-contains-event:
          comment-contains-value: recheck$

    #####################
    # Job Configuration #
    #####################

    scm:
      - lf-infra-gerrit-scm:
          jenkins-ssh-credential: '{jenkins-ssh-credential}'
          git-url: '{git-url}'
          refspec: '$GERRIT_REFSPEC'
          branch: 'origin/$GERRIT_BRANCH'
          submodule-recursive: '{submodule-recursive}'
          choosing-strategy: gerrit

    triggers:
      - gerrit:
          server-name: '{gerrit-server-name}'
          trigger-on: '{obj:gerrit_verify_triggers}'
          projects:
            - project-compare-type: ANT
              project-pattern: '{project}'
              branches:
                - branch-compare-type: ANT
                  branch-pattern: '**/{branch}'
              file-paths:
                - compare-type: ANT
                  pattern: '{nodedir}/**'
